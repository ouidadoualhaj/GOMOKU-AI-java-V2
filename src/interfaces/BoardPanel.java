package interfaces;

import java.awt.Color;

public class BoardPanel extends javax.swing.JPanel {
    
    public static Cellule board [][];       //------ Tables des cellule qui vont construire notre Gomoku
    public static int TAILLE_BOARD = 800;   //------ taille de plateau   
    
   
    //------- Constructeur -----------
    public BoardPanel() {
        initComponents();
        creation();
    }
    
    //----------- Getter--------------
    public Cellule[][] getBoard()
    {
        return board;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
        );
    }
    
    //------ Creation des cellules -----------
    public void creation() {
        
        //------ L'instanciation 
        board = new Cellule[19][19];     
        
        int count = 0;
        int k = 0;
        int l=0;
        
        /***********************************************************************
         * Nous avons cree une table des cellules, chaque ligne de "board" va
         * contenir 19 cellules et de meme, chaque colonne va contenir 19 cases,
         * pour ceci, on a besoin de deux boucles pour dessiner 19 cellules sur 
         * la meme ligne, puis revenir a la ligne et dessines 19 cellules aussi, 
         * et ainsi de suite
         **********************************************************************/
        for(int i = 0; i < 19; i++)
        {
        	l=0;
            for(int j = 0; j < 19; j++)
            {
                count++;
                if(count % 20 == 0)
                    break;
                board[k][l] = new Cellule(k,l);
                board[k][l].setBounds(j * Cellule.TAILLE_CELL, i * Cellule.TAILLE_CELL, Cellule.TAILLE_CELL, Cellule.TAILLE_CELL);
                board[k][l].addMouseListener(board[k][l]);
                this.add(board[k][l]);
                l++;
            }
            k++;
            count = 0;
        }
        this.repaint();   
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
